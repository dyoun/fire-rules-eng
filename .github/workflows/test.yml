name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install zen-engine
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python -m pytest tests/ -v --tb=short

    - name: Generate test report
      if: always()
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python -m pytest tests/ --junitxml=test-results.xml

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: test-results.xml

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: |
          rules-engine:latest
          rules-engine:${{ github.sha }}
        outputs: type=docker,dest=/tmp/rules-engine.tar

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: rules-engine-image
        path: /tmp/rules-engine.tar
        retention-days: 30
